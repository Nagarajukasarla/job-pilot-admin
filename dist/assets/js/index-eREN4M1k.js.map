{"version":3,"file":"index-eREN4M1k.js","sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react-dom/client.js","../../../src/constants.ts","../../../src/utils/localStorage.ts","../../../src/components/JobApplication.tsx","../../../src/assets/logo.png","../../../src/hooks/useIsFirefox.ts","../../../src/components/JobCard.tsx","../../../src/components/JobTypeDropdown.tsx","../../../src/components/LocationDropdown.tsx","../../../src/components/SearchBar.tsx","../../../src/components/SalarySlider.tsx","../../../src/layout/AppHeader.tsx","../../../src/services/supabaseConfig.ts","../../../src/services/api.ts","../../../src/pages/Home.tsx","../../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","export const indianCities = [\n    'Mumbai',\n    'Delhi',\n    'Bangalore',\n    'Hyderabad',\n    'Chennai',\n    'Kolkata',\n    'Pune',\n    'Ahmedabad',\n    'Jaipur',\n    'Surat',\n    'Lucknow',\n    'Kanpur',\n    'Nagpur',\n    'Indore',\n    'Bhopal',\n    'Visakhapatnam',\n    'Patna',\n    'Vadodara',\n    'Ghaziabad',\n    'Ludhiana',\n    'Agra',\n    'Nashik',\n    'Faridabad',\n    'Meerut',\n    'Rajkot',\n    'Kalyan-Dombivli',\n    'Vasai-Virar',\n    'Varanasi',\n    'Srinagar',\n    'Aurangabad',\n    'Dhanbad',\n    'Amritsar',\n    'Navi Mumbai',\n    'Allahabad',\n    'Howrah',\n    'Gwalior',\n    'Jabalpur',\n    'Coimbatore',\n    'Vijayawada',\n    'Jodhpur',\n    'Madurai',\n    'Raipur',\n    'Kota',\n    'Chandigarh',\n    'Guwahati',\n    'Solapur',\n    'Hubli-Dharwad',\n    'Mysore',\n    'Tiruchirappalli',\n    'Bareilly',\n    'Aligarh',\n    'Tiruppur',\n    'Moradabad',\n    'Jalandhar',\n    'Bhubaneswar',\n    'Salem',\n    'Warangal',\n    'Guntur',\n    'Bikaner',\n    'Amravati',\n    'Noida',\n    'Jamshedpur',\n    'Bhilai',\n    'Cuttack',\n    'Firozabad',\n    'Kochi',\n    'Nellore',\n    'Bhavnagar',\n    'Dehradun',\n    'Durgapur',\n    'Asansol',\n    'Rourkela',\n    'Nanded',\n    'Kolhapur',\n    'Ajmer',\n    'Akola',\n    'Gulbarga',\n    'Jamnagar',\n    'Ujjain',\n    'Loni',\n    'Siliguri',\n    'Jhansi',\n    'Ulhasnagar',\n    'Nellore',\n    'Jammu',\n    'Sangli-Miraj & Kupwad',\n    'Belgaum',\n    'Mangalore',\n    'Ambattur',\n    'Tirunelveli',\n    'Malegaon',\n    'Gaya',\n    'Tirupati',\n    'Udaipur',\n    'Kakinada',\n    'Davanagere',\n    'Kozhikode',\n    'Maheshtala',\n    'Rajpur Sonarpur',\n    'Bokaro',\n    'South Dumdum',\n    'Bally',\n    'Berhampur',\n    'Muzaffarnagar',\n    'Ahmednagar',\n    'Mathura',\n    'Kollam',\n    'Avadi',\n    'Kadapa',\n    'Kamarhati',\n    'Sambalpur',\n    'Bilaspur',\n    'Shahjahanpur',\n    'Satara',\n    'Bijapur',\n    'Rampur',\n    'Shimoga',\n];\n\nexport const jobTypes = ['Onsite', 'Hybrid', 'Remote']\n\n","export const saveDraft = (formData: any) => {\n    localStorage.setItem('jobFormDraft', JSON.stringify(formData))\n}\n\nexport const getDraft = () => {\n    const draft = localStorage.getItem('jobFormDraft')\n    return draft ? JSON.parse(draft) : null\n}\n\nexport const clearDraft = () => {\n    localStorage.removeItem('jobFormDraft')\n}\n","import { indianCities, jobTypes } from '@/constants'\nimport { getDraft, saveDraft } from '@/utils/localStorage'\nimport {\n    ArrowDownOutlined,\n    ArrowUpOutlined,\n    DownOutlined,\n} from '@ant-design/icons'\nimport {\n    Button,\n    Col,\n    ConfigProvider,\n    DatePicker,\n    Form,\n    Input,\n    Modal,\n    Row,\n    Select,\n} from 'antd'\nimport dayjs from 'dayjs'\nimport { useEffect, useState } from 'react'\n\nconst { TextArea } = Input\n\ninterface JobApplicationProps {\n    visible: boolean\n    onClose: () => void\n    onFinish: (jobData: any) => void\n}\n\nconst JobApplicationForm: React.FC<JobApplicationProps> = ({\n    visible,\n    onClose,\n    onFinish,\n}) => {\n    const [form] = Form.useForm()\n    const [salaryFrom, setSalaryFrom] = useState<number>(0)\n    const [salaryTo, setSalaryTo] = useState<number>(1200000)\n\n    const validateSalaryRange = (_: any, value: number) => {\n        if (!value) return Promise.resolve()\n\n        if (_.field === 'salaryFrom') {\n            const maxSalary = form.getFieldValue('salaryTo')\n            if (maxSalary && value > maxSalary) {\n                return Promise.reject(\n                    'Min salary should be less than max salary'\n                )\n            }\n        } else {\n            const minSalary = form.getFieldValue('salaryFrom')\n            if (minSalary && value < minSalary) {\n                return Promise.reject(\n                    'Max salary should be greater than min salary'\n                )\n            }\n        }\n        return Promise.resolve()\n    }\n\n    useEffect(() => {\n        const draft = getDraft()\n        if (draft) {\n            const formData = {\n                ...draft,\n                deadline: draft.deadline ? dayjs(draft.deadline) : undefined,\n            }\n            form.setFieldsValue(formData)\n            if (draft.salaryFrom && draft.salaryTo) {\n                setSalaryFrom(draft.salaryFrom)\n                setSalaryTo(draft.salaryTo)\n            }\n        }\n    }, [visible])\n\n    const handleSaveDraft = () => {\n        const values = form.getFieldsValue()\n        const formData = {\n            ...values,\n            salaryFrom,\n            salaryTo,\n            deadline: values.deadline?.toISOString(),\n        }\n        saveDraft(formData)\n    }\n\n    return (\n        <Modal\n            open={visible}\n            onCancel={onClose}\n            footer={null}\n            centered\n            width={750}\n        >\n            <h2 style={{ textAlign: 'center', marginBottom: 20 }}>\n                Create Job Opening\n            </h2>\n            <Form\n                form={form}\n                layout=\"vertical\"\n                requiredMark=\"optional\"\n                onFinish={onFinish}\n            >\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Job Title\"\n                            name=\"title\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please enter job title',\n                                },\n                            ]}\n                        >\n                            <Input\n                                placeholder=\"Enter job title\"\n                                style={{ padding: '12px 10px' }}\n                            />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Company Name\"\n                            name=\"company\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please enter company name',\n                                },\n                            ]}\n                        >\n                            <Input\n                                placeholder=\"Amazon, Microsoft, Swiggy\"\n                                style={{ padding: '12px 10px' }}\n                            />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <ConfigProvider\n                            theme={{\n                                token: {\n                                    paddingSM: 12,\n                                    controlHeight: 50,\n                                    fontSize: 16,\n                                },\n                            }}\n                        >\n                            <Form.Item\n                                label=\"Location\"\n                                name=\"location\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please select location',\n                                    },\n                                ]}\n                            >\n                                <Select\n                                    placeholder=\"Choose Preferred Location\"\n                                    options={indianCities.map((city) => {\n                                        return {\n                                            label: city,\n                                            value: city,\n                                        }\n                                    })}\n                                />\n                            </Form.Item>\n                        </ConfigProvider>\n                    </Col>\n                    <Col span={12}>\n                        <ConfigProvider\n                            theme={{\n                                token: {\n                                    paddingSM: 12,\n                                    controlHeight: 50,\n                                    fontSize: 16,\n                                },\n                            }}\n                        >\n                            <Form.Item\n                                label=\"Job Type\"\n                                name=\"jobType\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please select job type',\n                                    },\n                                ]}\n                            >\n                                <Select\n                                    placeholder=\"Select job type\"\n                                    options={jobTypes.map((type) => {\n                                        return {\n                                            label: type,\n                                            value: type,\n                                        }\n                                    })}\n                                />\n                            </Form.Item>\n                        </ConfigProvider>\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item label=\"Salary Range\">\n                            <div\n                                className=\"salary-range\"\n                                style={{\n                                    display: 'flex',\n                                    gap: '10px',\n                                    alignItems: 'center',\n                                }}\n                            >\n                                <Form.Item\n                                    name=\"salaryFrom\"\n                                    rules={[\n                                        { required: true, message: 'Required' },\n                                        { validator: validateSalaryRange },\n                                    ]}\n                                    style={{\n                                        display: 'inline-block',\n                                        margin: 0,\n                                    }}\n                                >\n                                    <Input\n                                        type=\"number\"\n                                        prefix={\n                                            <span style={{ marginRight: 5 }}>\n                                                <ArrowUpOutlined\n                                                    style={{\n                                                        marginRight: 0.2,\n                                                        color: '#d1d1d1',\n                                                    }}\n                                                />\n                                                <ArrowDownOutlined\n                                                    style={{ color: '#d1d1d1' }}\n                                                />\n                                            </span>\n                                        }\n                                        onChange={(e) => {\n                                            const value = e.target.value\n                                                ? Number(e.target.value)\n                                                : undefined\n                                            setSalaryFrom(value || 0)\n                                            form.setFieldValue(\n                                                'salaryFrom',\n                                                value\n                                            )\n                                            form.validateFields(['salaryTo'])\n                                        }}\n                                        style={{\n                                            width: 150,\n                                            padding: '12px 10px',\n                                        }}\n                                        placeholder=\"From\"\n                                    />\n                                </Form.Item>\n                                <span>-</span>\n                                <Form.Item\n                                    name=\"salaryTo\"\n                                    rules={[\n                                        { required: true, message: 'Required' },\n                                        { validator: validateSalaryRange },\n                                    ]}\n                                    style={{\n                                        display: 'inline-block',\n                                        margin: 0,\n                                    }}\n                                >\n                                    <Input\n                                        type=\"number\"\n                                        prefix={\n                                            <span style={{ marginRight: 5 }}>\n                                                <ArrowUpOutlined\n                                                    style={{\n                                                        marginRight: 0.2,\n                                                        color: '#d1d1d1',\n                                                    }}\n                                                />\n                                                <ArrowDownOutlined\n                                                    style={{ color: '#d1d1d1' }}\n                                                />\n                                            </span>\n                                        }\n                                        onChange={(e) => {\n                                            const value = e.target.value\n                                                ? Number(e.target.value)\n                                                : undefined\n                                            setSalaryTo(value || 0)\n                                            form.setFieldValue(\n                                                'salaryTo',\n                                                value\n                                            )\n                                            form.validateFields(['salaryFrom'])\n                                        }}\n                                        style={{\n                                            width: 150,\n                                            padding: '12px 10px',\n                                        }}\n                                        placeholder=\"To\"\n                                    />\n                                </Form.Item>\n                            </div>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Application Deadline\" name=\"deadline\">\n                            <DatePicker\n                                style={{ width: '100%', padding: '12px 10px' }}\n                            />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Form.Item label=\"Job Description\" name=\"description\">\n                    <TextArea\n                        rows={4}\n                        placeholder=\"Please share a description about the job role\"\n                        style={{\n                            padding: 10,\n                        }}\n                    />\n                </Form.Item>\n\n                <div\n                    className=\"form-buttons\"\n                    style={{ textAlign: 'right', marginTop: 20 }}\n                >\n                    <Button\n                        icon={<DownOutlined />}\n                        className=\"draft-btn\"\n                        style={{ marginRight: 10 }}\n                        onClick={handleSaveDraft}\n                    >\n                        Save Draft\n                    </Button>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Publish »\n                    </Button>\n                </div>\n            </Form>\n        </Modal>\n    )\n}\n\nexport default JobApplicationForm\n","export default \"__VITE_ASSET__DacSPZ0B__\"","export const useIsFirefox = () => {\n    return typeof navigator !== 'undefined' && /firefox/i.test(navigator.userAgent);\n};","import logo from '@/assets/logo.png'\nimport '@/styles/jobCard.css'\nimport { BankOutlined, HomeOutlined, UserOutlined } from '@ant-design/icons'\nimport { Button, Card, Typography } from 'antd'\nimport { JobApplication } from '@/types'\nimport { useIsFirefox } from '@/hooks/useIsFirefox'\n\ninterface JobCardProps {\n    job: JobApplication\n}\n\nconst JobCard: React.FC<JobCardProps> = ({ job }) => {\n    const isFirefox = useIsFirefox()\n\n    return (\n        <Card\n            className=\"job-card\"\n            styles={{\n                body: {\n                    padding: 15,\n                    height: isFirefox ? undefined : '265px',\n                    overflow: 'hidden',\n                },\n            }}\n        >\n            <div className=\"job-card-header\">\n                <img src={logo} alt=\"Company Logo\" className=\"company-logo\" />\n                <div className=\"time-tag\">\n                    <Typography.Text>24h ago</Typography.Text>\n                </div>\n            </div>\n\n            <h3 className=\"job-title\" title={job.title}>\n                {job.title}\n            </h3>\n\n            <div className=\"job-details\">\n                <span>\n                    <UserOutlined /> 1-3 yr Exp\n                </span>\n                <span>\n                    <HomeOutlined /> {job.jobType}\n                </span>\n                <span>\n                    <BankOutlined /> {(job.salaryTo / 100000).toFixed(0)}LPA\n                </span>\n            </div>\n\n            <div className=\"job-description-container\">\n                <ul className=\"job-description\">\n                    {job.description.split('\\n').map((line, index) => (\n                        <li key={index}>{line}</li>\n                    ))}\n                </ul>\n            </div>\n\n            <Button type=\"primary\" className=\"apply-btn\">\n                Apply Now\n            </Button>\n        </Card>\n    )\n}\n\nexport default JobCard\n","import { UserOutlined } from '@ant-design/icons'\nimport { ConfigProvider, Select } from 'antd'\nimport React from 'react'\n\nconst { Option } = Select\n\ninterface Props {\n    value: string | null\n    options: string[]\n    onChange: (value: string) => void\n}\n\nconst JobTypeDropdown: React.FC<Props> = ({ value, options, onChange }) => {\n    return (\n        <ConfigProvider\n            theme={{\n                token: {\n                    colorBorder: '#FFFFFF',\n                    paddingSM: 12,\n                    controlHeight: 40,\n                    fontSize: 16,\n                },\n            }}\n        >\n            <div className=\"filter-item\">\n                <Select\n                    prefix={\n                        <UserOutlined\n                            style={{\n                                marginRight: 15,\n                            }}\n                        />\n                    }\n                    value={value}\n                    onChange={onChange}\n                    placeholder=\"Job Type\"\n                    className=\"custom-dropdown\"\n                    style={{\n                        width: 320,\n                        border: 'none',\n                    }}\n                >\n                    {options.map((loc) => (\n                        <Option key={loc} value={loc}>\n                            {loc}\n                        </Option>\n                    ))}\n                </Select>\n            </div>\n        </ConfigProvider>\n    )\n}\n\nexport default JobTypeDropdown\n","import { EnvironmentOutlined } from '@ant-design/icons'\nimport { ConfigProvider, Select } from 'antd'\nimport React from 'react'\n\ninterface Props {\n    value: string | null\n    options: string[]\n    onChange: (value: string) => void\n}\n\nconst { Option } = Select\n\nconst LocationDropdown: React.FC<Props> = ({ value, options, onChange }) => {\n    return (\n        <ConfigProvider\n            theme={{\n                token: {\n                    colorBorder: '#FFFFFF',\n                    paddingSM: 12,\n                    controlHeight: 40,\n                    fontSize: 16,\n                },\n            }}\n        >\n            <div className=\"filter-item\">\n                <Select\n                    prefix={\n                        <EnvironmentOutlined\n                            style={{\n                                marginRight: 15,\n                            }}\n                        />\n                    }\n                    value={value}\n                    onChange={onChange}\n                    placeholder=\"Preferred Location\"\n                    className=\"custom-dropdown\"\n                    style={{\n                        width: 320,\n                        border: 'none',\n                    }}\n                >\n                    {options.map((loc) => (\n                        <Option key={loc} value={loc}>\n                            {loc}\n                        </Option>\n                    ))}\n                </Select>\n            </div>\n        </ConfigProvider>\n    )\n}\n\nexport default LocationDropdown\n","import { SearchOutlined } from '@ant-design/icons'\nimport { Input } from 'antd'\nimport React from 'react'\n\ninterface Props {\n    value: string\n    onChange: (value: string) => void   \n}\n\nconst SearchBar: React.FC<Props> = ({ value, onChange }) => {\n\n    return (\n        <div className=\"filter-item search\">\n            <Input\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                placeholder=\"Search By Job Title, Role\"\n                prefix={<SearchOutlined style={{ marginRight: '10px' }} />}\n                className=\"custom-input\"\n                style={{\n                    width: 300,\n                }}\n            />\n        </div>\n    )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport { Slider } from 'antd'\n\ninterface Props {\n    min: number\n    max: number\n    value: [number, number]\n    onChange: (values: [number, number]) => void\n}\n\nconst SalarySlider: React.FC<Props> = ({ min, max, value, onChange }) => {\n    const formatSalary = (value: number) => `₹${(value / 1000).toFixed(0)}K`\n\n    return (\n        <div className=\"filter-item salary-slider\">\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    padding: '0 10px',\n                }}\n            >\n                <span\n                    style={{\n                        textAlign: 'start',\n                        marginRight: 90,\n                    }}\n                >\n                    Salary Per Month\n                </span>\n                <span\n                    style={{\n                        textAlign: 'end',\n                    }}\n                >\n                    {formatSalary(value[0])} - {formatSalary(value[1])}\n                </span>\n            </div>\n            <Slider\n                range\n                value={value}\n                onChange={(values) => onChange(values as [number, number])}\n                min={min}\n                max={max}\n                style={{\n                    width: 320,\n                }}\n                tooltip={{\n                    formatter(value) {\n                        return formatSalary(value || 0)\n                    },\n                }}\n            />\n        </div>\n    )\n}\n\nexport default SalarySlider\n","import logo from '@/assets/logo.png'\nimport { Avatar, Button, Menu, Space, Typography } from 'antd'\nimport React from 'react'\nimport '@/styles/appHeader.css'\n\ninterface AppHeaderProps {\n    onClickCreateJob: () => void\n}\n\nconst { Text } = Typography\n\nconst menuItems = [\n    {\n        key: '1',\n        label: <Text>Home</Text>,\n    },\n    {\n        key: '2',\n        label: <Text>Find Jobs</Text>,\n    },\n    {\n        key: '3',\n        label: <Text>Find Talents</Text>,\n    },\n    {\n        key: '4',\n        label: <Text>About us</Text>,\n    },\n    {\n        key: '5',\n        label: <Text>Testimonials</Text>,\n    },\n]\nconst AppHeader: React.FC<AppHeaderProps> = ({ onClickCreateJob }) => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                borderRadius: '40px',\n                boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.1)',\n                maxWidth: '840px',\n                height: '80px',\n                margin: '0 auto',\n                padding: '0 30px 0 20px',\n            }}\n        >\n            <Avatar\n                size={53}\n                src={logo}\n                alt=\"Logo\"\n                style={{\n                    flexShrink: 0,\n                    marginRight: '15px',\n                }}\n            />\n            <Menu\n                mode=\"horizontal\"\n                items={menuItems}\n                className=\"custom-menu\"\n                style={{\n                    borderBottom: 'none',\n                    flex: 1,\n                    justifyContent: 'center',\n                    display: 'flex',\n                    gap: '10px',\n                    backgroundColor: 'transparent',\n                }}\n            />\n            <Space\n                style={{\n                    marginLeft: 10,\n                }}\n            >\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    size=\"large\"\n                    style={{\n                        background:\n                            'linear-gradient(180deg, #A128FF 0%, #6100AD 113.79%)',\n                        color: '#FFFFFF',\n                        fontSize: '16px',\n                        lineHeight: '24px',\n                        fontWeight: '600',\n                        borderRadius: '50px',\n                        padding: '10px 20px',\n                    }}\n                    onClick={onClickCreateJob}\n                >\n                    Create Jobs\n                </Button>\n            </Space>\n        </div>\n    )\n}\n\nexport default AppHeader\n","import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL\nconst supabaseKey = import.meta.env.VITE_ANON_KEY\n\nif (!supabaseUrl || !supabaseKey) {\n    throw new Error('Missing Supabase environment variables')\n}\n\nconst supabase = createClient(supabaseUrl, supabaseKey)\n\nexport default supabase\n","import { JobApplication } from '@/types'\nimport supabase from './supabaseConfig'\n\nexport const fetchAllJobApplications = async (): Promise<{ data: JobApplication[] | null, error: any }> => {\n    try {\n        const { data, error } = await supabase.from('_jobs').select('*')\n        \n        if (error) {\n            return { data: null, error }\n        }\n\n        const transformedData = data.map(job => ({\n            id: job.id,\n            title: job.title,\n            company: job.company,\n            location: job.location,\n            jobType: job.job_type,\n            salaryFrom: job.salary_from,\n            salaryTo: job.salary_to,\n            description: job.description,\n            deadLine: new Date(job.dead_line)\n        }))\n\n        return { data: transformedData, error: null }\n    } catch (error) {\n        return { data: null, error }\n    }\n}\n\nexport const createJob = async (\n    job: Omit<JobApplication, \"id\">\n): Promise<{ data: any, error: any }> => {\n    try {\n        const jobData = {\n            title: job.title,\n            company: job.company,\n            location: job.location,\n            job_type: job.jobType,\n            salary_from: job.salaryFrom,\n            salary_to: job.salaryTo,\n            description: job.description,\n            dead_line: job.deadLine\n        }\n\n        const { data, error } = await supabase\n            .from('_jobs')\n            .insert(jobData)\n            .select()\n            .single()\n\n        return { data, error }\n    } catch (error) {\n        return { data: null, error }\n    }\n}\n\n\n","import JobApplicationForm from '@/components/JobApplication'\nimport JobCard from '@/components/JobCard'\nimport JobTypeDropdown from '@/components/JobTypeDropdown'\nimport LocationDropdown from '@/components/LocationDropdown'\nimport SearchBar from '@/components/SearchBar'\nimport SalarySlider from '@/components/SalarySlider'\nimport AppHeader from '@/layout/AppHeader'\nimport { createJob, fetchAllJobApplications } from '@/services/api'\nimport '@/styles/filters.css'\nimport { JobApplication } from '@/types'\nimport { Empty, Layout, message, Spin, Button } from 'antd'\nimport { Content, Header } from 'antd/es/layout/layout'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport './Home.css'\nimport { indianCities, jobTypes } from '@/constants'\n\nconst Home: React.FC = () => {\n    const [searchValue, setSearchValue] = useState('')\n    const [location, setLocation] = useState<string | null>(null)\n    const [jobType, setJobType] = useState<string | null>(null)\n    const [salaryRange, setSalaryRange] = useState<[number, number]>([\n        100000, 9500000,\n    ])\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [jobs, setJobs] = useState<JobApplication[]>([])\n    const [loading, setLoading] = useState(false)\n\n    const fetchJobs = async () => {\n        setLoading(true)\n        const { data, error } = await fetchAllJobApplications()\n\n        if (error) {\n            message.error('Failed to fetch jobs')\n            console.error('Error:', error)\n        } else if (data) {\n            console.log('Success:', data)\n            setJobs(data)\n        }\n\n        setLoading(false)\n    }\n\n    const handleCreateJob = async (jobData: Omit<JobApplication, 'id'>) => {\n        const { error } = await createJob(jobData)\n        if (error) {\n            message.error('Failed to create job')\n            console.error('Error:', error)\n            return false\n        } else {\n            message.success('Job created successfully')\n            fetchJobs()\n            setIsModalVisible(false)\n            return true\n        }\n    }\n\n    const filteredJobs = useMemo(() => {\n        return jobs.filter((job) => {\n            const matchesSearch = job.title\n                .toLowerCase()\n                .includes(searchValue.toLowerCase())\n            const matchesLocation = !location || job.location === location\n            const matchesJobType = !jobType || job.jobType === jobType\n            const matchesSalary =\n                job.salaryFrom <= salaryRange[1] &&\n                job.salaryTo >= salaryRange[0]\n\n            return (\n                matchesSearch &&\n                matchesLocation &&\n                matchesJobType &&\n                matchesSalary\n            )\n        })\n    }, [jobs, searchValue, location, jobType, salaryRange])\n\n    const handleResetFilters = () => {\n        setSearchValue('')\n        setLocation(null)\n        setJobType(null)\n        setSalaryRange([100000, 9500000])\n    }\n\n    useEffect(() => {\n        fetchJobs()\n    }, [])\n\n    const hasActiveFilters =\n        searchValue ||\n        location ||\n        jobType ||\n        salaryRange[0] !== 100000 ||\n        salaryRange[1] !== 9500000\n\n    return (\n        <Layout>\n            <Header\n                className=\"header\"\n                style={{\n                    padding: '20px 0',\n                    backgroundColor: '#FFFFFF',\n                    height: '100%',\n                    lineHeight: 0,\n                }}\n            >\n                <AppHeader onClickCreateJob={() => setIsModalVisible(true)} />\n                <div className=\"filters\">\n                    <SearchBar value={searchValue} onChange={setSearchValue} />\n                    <LocationDropdown\n                        value={location}\n                        options={indianCities}\n                        onChange={setLocation}\n                    />\n                    <JobTypeDropdown\n                        value={jobType}\n                        options={jobTypes}\n                        onChange={setJobType}\n                    />\n                    <SalarySlider\n                        min={100000}\n                        max={9500000}\n                        value={salaryRange}\n                        onChange={setSalaryRange}\n                    />\n                    <Button\n                        type=\"primary\"\n                        onClick={handleResetFilters}\n                        style={{\n                            marginLeft: 40,\n                        }}\n                        disabled={!hasActiveFilters}\n                    >\n                        Reset\n                    </Button>{' '}\n                </div>\n            </Header>\n            <Content style={{ padding: '40px 100px' }}>\n                <Spin spinning={loading}>\n                    <JobApplicationForm\n                        visible={isModalVisible}\n                        onClose={() => setIsModalVisible(false)}\n                        onFinish={handleCreateJob}\n                    />\n                    {filteredJobs.length > 0 ? (\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                gap: '16px',\n                                justifyContent: 'flex-start',\n                            }}\n                        >\n                            {filteredJobs.map((job) => (\n                                <JobCard key={job.id} job={job} />\n                            ))}\n                        </div>\n                    ) : (\n                        <Empty\n                            description=\"No jobs found matching your criteria\"\n                            style={{ margin: '40px 0' }}\n                        />\n                    )}\n                </Spin>\n            </Content>\n        </Layout>\n    )\n}\n\nexport default Home\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport Home from './pages/Home'\n\nconst root = document.getElementById('root')\nif (!root) throw new Error('Root element not found')\n\ncreateRoot(root).render(\n    <StrictMode>\n        <Home />\n    </StrictMode>\n)\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","indianCities","jobTypes","saveDraft","formData","getDraft","draft","TextArea","Input","JobApplicationForm","visible","onClose","onFinish","form","Form","salaryFrom","setSalaryFrom","useState","salaryTo","setSalaryTo","validateSalaryRange","_","value","maxSalary","minSalary","useEffect","dayjs","handleSaveDraft","values","_a","jsxs","Modal","jsx","Row","Col","ConfigProvider","Select","city","type","ArrowUpOutlined","ArrowDownOutlined","DatePicker","Button","DownOutlined","logo","useIsFirefox","JobCard","job","isFirefox","Card","Typography","UserOutlined","HomeOutlined","BankOutlined","line","index","Option","JobTypeDropdown","options","onChange","loc","LocationDropdown","EnvironmentOutlined","SearchBar","SearchOutlined","SalarySlider","min","max","formatSalary","Slider","Text","menuItems","AppHeader","onClickCreateJob","Avatar","Menu","Space","supabaseUrl","supabaseKey","supabase","createClient","fetchAllJobApplications","data","error","createJob","jobData","Home","searchValue","setSearchValue","location","setLocation","jobType","setJobType","salaryRange","setSalaryRange","isModalVisible","setIsModalVisible","jobs","setJobs","loading","setLoading","fetchJobs","message","handleCreateJob","filteredJobs","useMemo","matchesSearch","matchesLocation","matchesJobType","matchesSalary","handleResetFilters","hasActiveFilters","Layout","Header","Content","Spin","Empty","root","StrictMode"],"mappings":";;;;;;;;GASa,IAAIA,GAAEC,EAAiBC,GAAE,OAAO,IAAI,eAAe,EAAEC,GAAE,OAAO,IAAI,gBAAgB,EAAEC,GAAE,OAAO,UAAU,eAAeC,GAAEL,GAAE,mDAAmD,kBAAkBM,GAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,GAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,GAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,aAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,GAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,GAAE,OAAO,CAAC,YAAkBF,GAAaY,EAAA,IAACR,EAAEQ,EAAA,KAAaR,ECPjWS,EAAA,QAAUf,oBCDfG,EAAIH,EAENgB,EAAqBb,EAAE,WACDA,EAAE,YCLnB,MAAMc,EAAe,CACxB,SACA,QACA,YACA,YACA,UACA,UACA,OACA,YACA,SACA,QACA,UACA,SACA,SACA,SACA,SACA,gBACA,QACA,WACA,YACA,WACA,OACA,SACA,YACA,SACA,SACA,kBACA,cACA,WACA,WACA,aACA,UACA,WACA,cACA,YACA,SACA,UACA,WACA,aACA,aACA,UACA,UACA,SACA,OACA,aACA,WACA,UACA,gBACA,SACA,kBACA,WACA,UACA,WACA,YACA,YACA,cACA,QACA,WACA,SACA,UACA,WACA,QACA,aACA,SACA,UACA,YACA,QACA,UACA,YACA,WACA,WACA,UACA,WACA,SACA,WACA,QACA,QACA,WACA,WACA,SACA,OACA,WACA,SACA,aACA,UACA,QACA,wBACA,UACA,YACA,WACA,cACA,WACA,OACA,WACA,UACA,WACA,aACA,YACA,aACA,kBACA,SACA,eACA,QACA,YACA,gBACA,aACA,UACA,SACA,QACA,SACA,YACA,YACA,WACA,eACA,SACA,UACA,SACA,SACJ,EAEaC,EAAW,CAAC,SAAU,SAAU,QAAQ,ECxHxCC,GAAaC,GAAkB,CACxC,aAAa,QAAQ,eAAgB,KAAK,UAAUA,CAAQ,CAAC,CACjE,EAEaC,GAAW,IAAM,CACpB,MAAAC,EAAQ,aAAa,QAAQ,cAAc,EACjD,OAAOA,EAAQ,KAAK,MAAMA,CAAK,EAAI,IACvC,ECcM,CAAE,SAAAC,EAAa,EAAAC,EAQfC,GAAoD,CAAC,CACvD,QAAAC,EACA,QAAAC,EACA,SAAAC,CACJ,IAAM,CACF,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAiB,CAAC,EAChD,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAiB,IAAO,EAElDG,EAAsB,CAACC,EAAQC,IAAkB,CACnD,GAAI,CAACA,EAAc,OAAA,QAAQ,QAAQ,EAE/B,GAAAD,EAAE,QAAU,aAAc,CACpB,MAAAE,EAAYV,EAAK,cAAc,UAAU,EAC3C,GAAAU,GAAaD,EAAQC,EACrB,OAAO,QAAQ,OACX,2CACJ,CACJ,KACG,CACG,MAAAC,EAAYX,EAAK,cAAc,YAAY,EAC7C,GAAAW,GAAaF,EAAQE,EACrB,OAAO,QAAQ,OACX,8CACJ,CACJ,CAEJ,OAAO,QAAQ,QAAQ,CAC3B,EAEAC,EAAAA,UAAU,IAAM,CACZ,MAAMnB,EAAQD,GAAS,EACvB,GAAIC,EAAO,CACP,MAAMF,EAAW,CACb,GAAGE,EACH,SAAUA,EAAM,SAAWoB,EAAMpB,EAAM,QAAQ,EAAI,MACvD,EACAO,EAAK,eAAeT,CAAQ,EACxBE,EAAM,YAAcA,EAAM,WAC1BU,EAAcV,EAAM,UAAU,EAC9Ba,EAAYb,EAAM,QAAQ,EAC9B,CACJ,EACD,CAACI,CAAO,CAAC,EAEZ,MAAMiB,EAAkB,IAAM,OACpB,MAAAC,EAASf,EAAK,eAAe,EAC7BT,EAAW,CACb,GAAGwB,EACH,WAAAb,EACA,SAAAG,EACA,UAAUW,EAAAD,EAAO,WAAP,YAAAC,EAAiB,aAC/B,EACA1B,GAAUC,CAAQ,CACtB,EAGI,OAAA0B,EAAA,KAACC,EAAA,CACG,KAAMrB,EACN,SAAUC,EACV,OAAQ,KACR,SAAQ,GACR,MAAO,IAEP,SAAA,CAACqB,EAAAA,IAAA,KAAA,CAAG,MAAO,CAAE,UAAW,SAAU,aAAc,EAAA,EAAM,SAEtD,oBAAA,CAAA,EACAF,EAAA,KAAChB,EAAA,CACG,KAAAD,EACA,OAAO,WACP,aAAa,WACb,SAAAD,EAEA,SAAA,CAACkB,EAAAA,KAAAG,EAAA,CAAI,OAAQ,GACT,SAAA,CAACD,EAAAA,IAAAE,EAAA,CAAI,KAAM,GACP,SAAAF,EAAA,IAAClB,EAAK,KAAL,CACG,MAAM,YACN,KAAK,QACL,MAAO,CACH,CACI,SAAU,GACV,QAAS,wBAAA,CAEjB,EAEA,SAAAkB,EAAA,IAACxB,EAAA,CACG,YAAY,kBACZ,MAAO,CAAE,QAAS,WAAY,CAAA,CAAA,CAClC,CAAA,EAER,EACAwB,EAAAA,IAACE,EAAI,CAAA,KAAM,GACP,SAAAF,EAAA,IAAClB,EAAK,KAAL,CACG,MAAM,eACN,KAAK,UACL,MAAO,CACH,CACI,SAAU,GACV,QAAS,2BAAA,CAEjB,EAEA,SAAAkB,EAAA,IAACxB,EAAA,CACG,YAAY,4BACZ,MAAO,CAAE,QAAS,WAAY,CAAA,CAAA,CAClC,CAAA,CAER,CAAA,CAAA,EACJ,EAEAsB,EAAAA,KAACG,EAAI,CAAA,OAAQ,GACT,SAAA,CAACD,EAAAA,IAAAE,EAAA,CAAI,KAAM,GACP,SAAAF,EAAA,IAACG,EAAA,CACG,MAAO,CACH,MAAO,CACH,UAAW,GACX,cAAe,GACf,SAAU,EAAA,CAElB,EAEA,SAAAH,EAAA,IAAClB,EAAK,KAAL,CACG,MAAM,WACN,KAAK,WACL,MAAO,CACH,CACI,SAAU,GACV,QAAS,wBAAA,CAEjB,EAEA,SAAAkB,EAAA,IAACI,EAAA,CACG,YAAY,4BACZ,QAASnC,EAAa,IAAKoC,IAChB,CACH,MAAOA,EACP,MAAOA,CACX,EACH,CAAA,CAAA,CACL,CAAA,CACJ,CAAA,EAER,EACAL,EAAAA,IAACE,EAAI,CAAA,KAAM,GACP,SAAAF,EAAA,IAACG,EAAA,CACG,MAAO,CACH,MAAO,CACH,UAAW,GACX,cAAe,GACf,SAAU,EAAA,CAElB,EAEA,SAAAH,EAAA,IAAClB,EAAK,KAAL,CACG,MAAM,WACN,KAAK,UACL,MAAO,CACH,CACI,SAAU,GACV,QAAS,wBAAA,CAEjB,EAEA,SAAAkB,EAAA,IAACI,EAAA,CACG,YAAY,kBACZ,QAASlC,EAAS,IAAKoC,IACZ,CACH,MAAOA,EACP,MAAOA,CACX,EACH,CAAA,CAAA,CACL,CAAA,CACJ,CAAA,CAER,CAAA,CAAA,EACJ,EACAR,EAAAA,KAACG,EAAI,CAAA,OAAQ,GACT,SAAA,CAACD,EAAAA,IAAAE,EAAA,CAAI,KAAM,GACP,SAAAF,EAAAA,IAAClB,EAAK,KAAL,CAAU,MAAM,eACb,SAAAgB,EAAA,KAAC,MAAA,CACG,UAAU,eACV,MAAO,CACH,QAAS,OACT,IAAK,OACL,WAAY,QAChB,EAEA,SAAA,CAAAE,EAAA,IAAClB,EAAK,KAAL,CACG,KAAK,aACL,MAAO,CACH,CAAE,SAAU,GAAM,QAAS,UAAW,EACtC,CAAE,UAAWM,CAAoB,CACrC,EACA,MAAO,CACH,QAAS,eACT,OAAQ,CACZ,EAEA,SAAAY,EAAA,IAACxB,EAAA,CACG,KAAK,SACL,OACKsB,EAAAA,KAAA,OAAA,CAAK,MAAO,CAAE,YAAa,CACxB,EAAA,SAAA,CAAAE,EAAA,IAACO,EAAA,CACG,MAAO,CACH,YAAa,GACb,MAAO,SAAA,CACX,CACJ,EACAP,EAAA,IAACQ,EAAA,CACG,MAAO,CAAE,MAAO,SAAU,CAAA,CAAA,CAC9B,EACJ,EAEJ,SAAW5C,GAAM,CACP,MAAA0B,EAAQ1B,EAAE,OAAO,MACjB,OAAOA,EAAE,OAAO,KAAK,EACrB,OACNoB,EAAcM,GAAS,CAAC,EACnBT,EAAA,cACD,aACAS,CACJ,EACKT,EAAA,eAAe,CAAC,UAAU,CAAC,CACpC,EACA,MAAO,CACH,MAAO,IACP,QAAS,WACb,EACA,YAAY,MAAA,CAAA,CAChB,CACJ,EACAmB,EAAAA,IAAC,QAAK,SAAC,GAAA,CAAA,EACPA,EAAA,IAAClB,EAAK,KAAL,CACG,KAAK,WACL,MAAO,CACH,CAAE,SAAU,GAAM,QAAS,UAAW,EACtC,CAAE,UAAWM,CAAoB,CACrC,EACA,MAAO,CACH,QAAS,eACT,OAAQ,CACZ,EAEA,SAAAY,EAAA,IAACxB,EAAA,CACG,KAAK,SACL,OACKsB,EAAAA,KAAA,OAAA,CAAK,MAAO,CAAE,YAAa,CACxB,EAAA,SAAA,CAAAE,EAAA,IAACO,EAAA,CACG,MAAO,CACH,YAAa,GACb,MAAO,SAAA,CACX,CACJ,EACAP,EAAA,IAACQ,EAAA,CACG,MAAO,CAAE,MAAO,SAAU,CAAA,CAAA,CAC9B,EACJ,EAEJ,SAAW5C,GAAM,CACP,MAAA0B,EAAQ1B,EAAE,OAAO,MACjB,OAAOA,EAAE,OAAO,KAAK,EACrB,OACNuB,EAAYG,GAAS,CAAC,EACjBT,EAAA,cACD,WACAS,CACJ,EACKT,EAAA,eAAe,CAAC,YAAY,CAAC,CACtC,EACA,MAAO,CACH,MAAO,IACP,QAAS,WACb,EACA,YAAY,IAAA,CAAA,CAChB,CAAA,CACJ,CAAA,GAER,CACJ,CAAA,EACAmB,EAAA,IAACE,EAAI,CAAA,KAAM,GACP,SAAAF,EAAAA,IAAClB,EAAK,KAAL,CAAU,MAAM,uBAAuB,KAAK,WACzC,SAAAkB,EAAA,IAACS,EAAA,CACG,MAAO,CAAE,MAAO,OAAQ,QAAS,WAAY,CAAA,GAErD,CACJ,CAAA,CAAA,EACJ,QAEC3B,EAAK,KAAL,CAAU,MAAM,kBAAkB,KAAK,cACpC,SAAAkB,EAAA,IAACzB,GAAA,CACG,KAAM,EACN,YAAY,gDACZ,MAAO,CACH,QAAS,EAAA,CACb,CAAA,EAER,EAEAuB,EAAA,KAAC,MAAA,CACG,UAAU,eACV,MAAO,CAAE,UAAW,QAAS,UAAW,EAAG,EAE3C,SAAA,CAAAE,EAAA,IAACU,EAAA,CACG,WAAOC,EAAa,EAAA,EACpB,UAAU,YACV,MAAO,CAAE,YAAa,EAAG,EACzB,QAAShB,EACZ,SAAA,YAAA,CAED,QACCe,EAAO,CAAA,KAAK,UAAU,SAAS,SAAS,SAEzC,WAAA,CAAA,CAAA,CAAA,CAAA,CACJ,CAAA,CAAA,CACJ,CAAA,CACJ,CAER,EC1VeE,EAAA,mCCAFC,GAAe,IACjB,OAAO,UAAc,KAAe,WAAW,KAAK,UAAU,SAAS,ECU5EC,GAAkC,CAAC,CAAE,IAAAC,KAAU,CACjD,MAAMC,EAAYH,GAAa,EAG3B,OAAAf,EAAA,KAACmB,GAAA,CACG,UAAU,WACV,OAAQ,CACJ,KAAM,CACF,QAAS,GACT,OAAQD,EAAY,OAAY,QAChC,SAAU,QAAA,CAElB,EAEA,SAAA,CAAClB,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACX,SAAA,CAAAE,MAAC,OAAI,IAAKY,EAAM,IAAI,eAAe,UAAU,eAAe,EAC5DZ,EAAAA,IAAC,OAAI,UAAU,WACX,eAACkB,EAAW,KAAX,CAAgB,SAAA,SAAO,CAAA,CAC5B,CAAA,CAAA,EACJ,EAEAlB,EAAAA,IAAC,MAAG,UAAU,YAAY,MAAOe,EAAI,MAChC,WAAI,KACT,CAAA,EAEAjB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACX,SAAA,CAAAA,OAAC,OACG,CAAA,SAAA,CAAAE,EAAA,IAACmB,EAAa,EAAA,EAAE,aAAA,EACpB,SACC,OACG,CAAA,SAAA,CAAAnB,EAAA,IAACoB,GAAa,EAAA,EAAE,IAAEL,EAAI,OAAA,EAC1B,SACC,OACG,CAAA,SAAA,CAAAf,EAAA,IAACqB,GAAa,EAAA,EAAE,KAAGN,EAAI,SAAW,KAAQ,QAAQ,CAAC,EAAE,KAAA,CACzD,CAAA,CAAA,EACJ,EAEAf,EAAAA,IAAC,OAAI,UAAU,4BACX,eAAC,KAAG,CAAA,UAAU,kBACT,SAAAe,EAAI,YAAY,MAAM;AAAA,CAAI,EAAE,IAAI,CAACO,EAAMC,IACpCvB,EAAAA,IAAC,MAAgB,SAARsB,CAAA,EAAAC,CAAa,CACzB,CAAA,CACL,CACJ,CAAA,QAECb,EAAO,CAAA,KAAK,UAAU,UAAU,YAAY,SAE7C,WAAA,CAAA,CAAA,CAAA,CACJ,CAER,ECzDM,CAAEc,OAAAA,EAAW,EAAApB,EAQbqB,GAAmC,CAAC,CAAE,MAAAnC,EAAO,QAAAoC,EAAS,SAAAC,KAEpD3B,EAAA,IAACG,EAAA,CACG,MAAO,CACH,MAAO,CACH,YAAa,UACb,UAAW,GACX,cAAe,GACf,SAAU,EAAA,CAElB,EAEA,SAAAH,EAAA,IAAC,MAAI,CAAA,UAAU,cACX,SAAAA,EAAA,IAACI,EAAA,CACG,OACIJ,EAAA,IAACmB,EAAA,CACG,MAAO,CACH,YAAa,EAAA,CACjB,CACJ,EAEJ,MAAA7B,EACA,SAAAqC,EACA,YAAY,WACZ,UAAU,kBACV,MAAO,CACH,MAAO,IACP,OAAQ,MACZ,EAEC,SAAAD,EAAQ,IAAKE,GACV5B,EAAAA,IAACwB,IAAiB,MAAOI,EACpB,SADQA,CAAA,EAAAA,CAEb,CACH,CAAA,CAAA,CAET,CAAA,CAAA,CACJ,ECvCF,CAAE,OAAAJ,EAAW,EAAApB,EAEbyB,GAAoC,CAAC,CAAE,MAAAvC,EAAO,QAAAoC,EAAS,SAAAC,KAErD3B,EAAA,IAACG,EAAA,CACG,MAAO,CACH,MAAO,CACH,YAAa,UACb,UAAW,GACX,cAAe,GACf,SAAU,EAAA,CAElB,EAEA,SAAAH,EAAA,IAAC,MAAI,CAAA,UAAU,cACX,SAAAA,EAAA,IAACI,EAAA,CACG,OACIJ,EAAA,IAAC8B,GAAA,CACG,MAAO,CACH,YAAa,EAAA,CACjB,CACJ,EAEJ,MAAAxC,EACA,SAAAqC,EACA,YAAY,qBACZ,UAAU,kBACV,MAAO,CACH,MAAO,IACP,OAAQ,MACZ,EAEC,SAAAD,EAAQ,IAAKE,GACV5B,EAAAA,IAACwB,IAAiB,MAAOI,EACpB,SADQA,CAAA,EAAAA,CAEb,CACH,CAAA,CAAA,CAET,CAAA,CAAA,CACJ,ECxCFG,GAA6B,CAAC,CAAE,MAAAzC,EAAO,SAAAqC,KAGrC3B,EAAAA,IAAC,MAAI,CAAA,UAAU,qBACX,SAAAA,EAAA,IAACxB,EAAA,CACG,MAAAc,EACA,SAAW1B,GAAM+D,EAAS/D,EAAE,OAAO,KAAK,EACxC,YAAY,4BACZ,OAASoC,EAAA,IAAAgC,GAAA,CAAe,MAAO,CAAE,YAAa,QAAU,EACxD,UAAU,eACV,MAAO,CACH,MAAO,GAAA,CACX,CAAA,EAER,ECbFC,GAAgC,CAAC,CAAE,IAAAC,EAAK,IAAAC,EAAK,MAAA7C,EAAO,SAAAqC,KAAe,CAC/D,MAAAS,EAAgB9C,GAAkB,KAAKA,EAAQ,KAAM,QAAQ,CAAC,CAAC,IAGjE,OAAAQ,EAAA,KAAC,MAAI,CAAA,UAAU,4BACX,SAAA,CAAAA,EAAA,KAAC,MAAA,CACG,MAAO,CACH,QAAS,OACT,eAAgB,gBAChB,QAAS,QACb,EAEA,SAAA,CAAAE,EAAA,IAAC,OAAA,CACG,MAAO,CACH,UAAW,QACX,YAAa,EACjB,EACH,SAAA,kBAAA,CAED,EACAF,EAAA,KAAC,OAAA,CACG,MAAO,CACH,UAAW,KACf,EAEC,SAAA,CAAasC,EAAA9C,EAAM,CAAC,CAAC,EAAE,MAAI8C,EAAa9C,EAAM,CAAC,CAAC,CAAA,CAAA,CAAA,CACrD,CAAA,CACJ,EACAU,EAAA,IAACqC,GAAA,CACG,MAAK,GACL,MAAA/C,EACA,SAAWM,GAAW+B,EAAS/B,CAA0B,EACzD,IAAAsC,EACA,IAAAC,EACA,MAAO,CACH,MAAO,GACX,EACA,QAAS,CACL,UAAU7C,EAAO,CACN,OAAA8C,EAAa9C,GAAS,CAAC,CAAA,CAClC,CACJ,CAAA,CACJ,EACJ,CAER,EC9CM,CAAE,KAAAgD,CAAS,EAAApB,EAEXqB,GAAY,CACd,CACI,IAAK,IACL,MAAQvC,EAAAA,IAAAsC,EAAA,CAAK,SAAI,MAAA,CAAA,CACrB,EACA,CACI,IAAK,IACL,MAAQtC,EAAAA,IAAAsC,EAAA,CAAK,SAAS,WAAA,CAAA,CAC1B,EACA,CACI,IAAK,IACL,MAAQtC,EAAAA,IAAAsC,EAAA,CAAK,SAAY,cAAA,CAAA,CAC7B,EACA,CACI,IAAK,IACL,MAAQtC,EAAAA,IAAAsC,EAAA,CAAK,SAAQ,UAAA,CAAA,CACzB,EACA,CACI,IAAK,IACL,MAAQtC,EAAAA,IAAAsC,EAAA,CAAK,SAAY,cAAA,CAAA,CAAA,CAEjC,EACME,GAAsC,CAAC,CAAE,iBAAAC,KAEvC3C,EAAA,KAAC,MAAA,CACG,MAAO,CACH,QAAS,OACT,cAAe,MACf,WAAY,SACZ,eAAgB,gBAChB,aAAc,OACd,UAAW,kCACX,SAAU,QACV,OAAQ,OACR,OAAQ,SACR,QAAS,eACb,EAEA,SAAA,CAAAE,EAAA,IAAC0C,GAAA,CACG,KAAM,GACN,IAAK9B,EACL,IAAI,OACJ,MAAO,CACH,WAAY,EACZ,YAAa,MAAA,CACjB,CACJ,EACAZ,EAAA,IAAC2C,GAAA,CACG,KAAK,aACL,MAAOJ,GACP,UAAU,cACV,MAAO,CACH,aAAc,OACd,KAAM,EACN,eAAgB,SAChB,QAAS,OACT,IAAK,OACL,gBAAiB,aAAA,CACrB,CACJ,EACAvC,EAAA,IAAC4C,GAAA,CACG,MAAO,CACH,WAAY,EAChB,EAEA,SAAA5C,EAAA,IAACU,EAAA,CACG,KAAK,UACL,MAAM,QACN,KAAK,QACL,MAAO,CACH,WACI,uDACJ,MAAO,UACP,SAAU,OACV,WAAY,OACZ,WAAY,MACZ,aAAc,OACd,QAAS,WACb,EACA,QAAS+B,EACZ,SAAA,aAAA,CAAA,CAED,CAAA,CACJ,CAAA,CACJ,EC7FFI,GAAc,2CACdC,GAAc,mNAMdC,EAAWC,GAAaH,GAAaC,EAAW,ECNzCG,GAA0B,SAAoE,CACnG,GAAA,CACM,KAAA,CAAE,KAAAC,EAAM,MAAAC,CAAA,EAAU,MAAMJ,EAAS,KAAK,OAAO,EAAE,OAAO,GAAG,EAE/D,OAAII,EACO,CAAE,KAAM,KAAM,MAAAA,CAAM,EAexB,CAAE,KAZeD,EAAK,IAAYnC,IAAA,CACrC,GAAIA,EAAI,GACR,MAAOA,EAAI,MACX,QAASA,EAAI,QACb,SAAUA,EAAI,SACd,QAASA,EAAI,SACb,WAAYA,EAAI,YAChB,SAAUA,EAAI,UACd,YAAaA,EAAI,YACjB,SAAU,IAAI,KAAKA,EAAI,SAAS,CAAA,EAClC,EAE8B,MAAO,IAAK,QACvCoC,EAAO,CACL,MAAA,CAAE,KAAM,KAAM,MAAAA,CAAM,CAAA,CAEnC,EAEaC,GAAY,MACrBrC,GACqC,CACjC,GAAA,CACA,MAAMsC,EAAU,CACZ,MAAOtC,EAAI,MACX,QAASA,EAAI,QACb,SAAUA,EAAI,SACd,SAAUA,EAAI,QACd,YAAaA,EAAI,WACjB,UAAWA,EAAI,SACf,YAAaA,EAAI,YACjB,UAAWA,EAAI,QACnB,EAEM,CAAE,KAAAmC,EAAM,MAAAC,GAAU,MAAMJ,EACzB,KAAK,OAAO,EACZ,OAAOM,CAAO,EACd,OAAA,EACA,OAAO,EAEL,MAAA,CAAE,KAAAH,EAAM,MAAAC,CAAM,QAChBA,EAAO,CACL,MAAA,CAAE,KAAM,KAAM,MAAAA,CAAM,CAAA,CAEnC,ECtCMG,GAAiB,IAAM,CACzB,KAAM,CAACC,EAAaC,CAAc,EAAIvE,EAAAA,SAAS,EAAE,EAC3C,CAACwE,EAAUC,CAAW,EAAIzE,EAAAA,SAAwB,IAAI,EACtD,CAAC0E,EAASC,CAAU,EAAI3E,EAAAA,SAAwB,IAAI,EACpD,CAAC4E,EAAaC,CAAc,EAAI7E,WAA2B,CAC7D,IAAQ,IAAA,CACX,EACK,CAAC8E,EAAgBC,CAAiB,EAAI/E,EAAAA,SAAS,EAAK,EACpD,CAACgF,EAAMC,CAAO,EAAIjF,EAAAA,SAA2B,CAAA,CAAE,EAC/C,CAACkF,EAASC,CAAU,EAAInF,EAAAA,SAAS,EAAK,EAEtCoF,EAAY,SAAY,CAC1BD,EAAW,EAAI,EACf,KAAM,CAAE,KAAAlB,EAAM,MAAAC,CAAM,EAAI,MAAMF,GAAwB,EAElDE,GACAmB,EAAQ,MAAM,sBAAsB,EAC5B,QAAA,MAAM,SAAUnB,CAAK,GACtBD,IACC,QAAA,IAAI,WAAYA,CAAI,EAC5BgB,EAAQhB,CAAI,GAGhBkB,EAAW,EAAK,CACpB,EAEMG,EAAkB,MAAOlB,GAAwC,CACnE,KAAM,CAAE,MAAAF,CAAA,EAAU,MAAMC,GAAUC,CAAO,EACzC,OAAIF,GACAmB,EAAQ,MAAM,sBAAsB,EAC5B,QAAA,MAAM,SAAUnB,CAAK,EACtB,KAEPmB,EAAQ,QAAQ,0BAA0B,EAChCD,EAAA,EACVL,EAAkB,EAAK,EAChB,GAEf,EAEMQ,EAAeC,EAAAA,QAAQ,IAClBR,EAAK,OAAQlD,GAAQ,CAClB,MAAA2D,EAAgB3D,EAAI,MACrB,cACA,SAASwC,EAAY,aAAa,EACjCoB,EAAkB,CAAClB,GAAY1C,EAAI,WAAa0C,EAChDmB,EAAiB,CAACjB,GAAW5C,EAAI,UAAY4C,EAC7CkB,EACF9D,EAAI,YAAc8C,EAAY,CAAC,GAC/B9C,EAAI,UAAY8C,EAAY,CAAC,EAG7B,OAAAa,GACAC,GACAC,GACAC,CAAA,CAEP,EACF,CAACZ,EAAMV,EAAaE,EAAUE,EAASE,CAAW,CAAC,EAEhDiB,EAAqB,IAAM,CAC7BtB,EAAe,EAAE,EACjBE,EAAY,IAAI,EAChBE,EAAW,IAAI,EACAE,EAAA,CAAC,IAAQ,IAAO,CAAC,CACpC,EAEArE,EAAAA,UAAU,IAAM,CACF4E,EAAA,CACd,EAAG,EAAE,EAEC,MAAAU,EACFxB,GACAE,GACAE,GACAE,EAAY,CAAC,IAAM,KACnBA,EAAY,CAAC,IAAM,KAEvB,cACKmB,GACG,CAAA,SAAA,CAAAlF,EAAA,KAACmF,GAAA,CACG,UAAU,SACV,MAAO,CACH,QAAS,SACT,gBAAiB,UACjB,OAAQ,OACR,WAAY,CAChB,EAEA,SAAA,CAAAjF,EAAA,IAACwC,GAAU,CAAA,iBAAkB,IAAMwB,EAAkB,EAAI,EAAG,EAC5DlE,EAAAA,KAAC,MAAI,CAAA,UAAU,UACX,SAAA,CAAAE,EAAA,IAAC+B,GAAU,CAAA,MAAOwB,EAAa,SAAUC,EAAgB,EACzDxD,EAAA,IAAC6B,GAAA,CACG,MAAO4B,EACP,QAASxF,EACT,SAAUyF,CAAA,CACd,EACA1D,EAAA,IAACyB,GAAA,CACG,MAAOkC,EACP,QAASzF,EACT,SAAU0F,CAAA,CACd,EACA5D,EAAA,IAACiC,GAAA,CACG,IAAK,IACL,IAAK,KACL,MAAO4B,EACP,SAAUC,CAAA,CACd,EACA9D,EAAA,IAACU,EAAA,CACG,KAAK,UACL,QAASoE,EACT,MAAO,CACH,WAAY,EAChB,EACA,SAAU,CAACC,EACd,SAAA,OAAA,CAED,EAAU,GAAA,CACd,CAAA,CAAA,CAAA,CACJ,EACA/E,EAAAA,IAACkF,GAAQ,CAAA,MAAO,CAAE,QAAS,cACvB,SAAApF,EAAA,KAACqF,GAAK,CAAA,SAAUhB,EACZ,SAAA,CAAAnE,EAAA,IAACvB,GAAA,CACG,QAASsF,EACT,QAAS,IAAMC,EAAkB,EAAK,EACtC,SAAUO,CAAA,CACd,EACCC,EAAa,OAAS,EACnBxE,EAAA,IAAC,MAAA,CACG,MAAO,CACH,QAAS,OACT,SAAU,OACV,IAAK,OACL,eAAgB,YACpB,EAEC,SAAAwE,EAAa,IAAKzD,SACdD,GAAqB,CAAA,IAAAC,CAAA,EAARA,EAAI,EAAc,CACnC,CAAA,CAAA,EAGLf,EAAA,IAACoF,GAAA,CACG,YAAY,uCACZ,MAAO,CAAE,OAAQ,QAAS,CAAA,CAAA,CAC9B,CAAA,CAER,CACJ,CAAA,CAAA,EACJ,CAER,ECjKMC,EAAO,SAAS,eAAe,MAAM,EAC3C,GAAI,CAACA,EAAY,MAAA,IAAI,MAAM,wBAAwB,EAEnDrH,EAAWqH,CAAI,EAAE,OACZrF,EAAA,IAAAsF,EAAA,WAAA,CACG,SAACtF,EAAAA,IAAAsD,GAAA,CAAA,CAAK,CACV,CAAA,CACJ","x_google_ignoreList":[0,1,2]}